{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/legren/Projects/my-insta/components/main/Feed.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nimport { connect } from \"react-redux\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nfunction FeedScreen(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var imageWidth = Math.floor(useWindowDimensions().width);\n  useEffect(function () {\n    var posts = [];\n\n    if (props.usersFollowingLoaded === props.following.length) {\n      var _loop = function _loop(i) {\n        var user = props.users.find(function (user) {\n          return user.uid === props.following[i];\n        });\n\n        if (user !== undefined) {\n          posts = [].concat(_toConsumableArray(posts), _toConsumableArray(user.posts));\n        }\n      };\n\n      for (var i = 0; i < props.following.length; i++) {\n        _loop(i);\n      }\n    }\n\n    posts.sort(function (x, y) {\n      return x.creation - y.creation;\n    });\n    setPosts(posts);\n  }, [props.usersFollowingLoaded]);\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    containerInfo: {\n      margin: 20\n    },\n    containerGallery: {\n      flex: 1\n    },\n    containerImage: {\n      flex: 1\n    },\n    image: {\n      width: imageWidth,\n      height: imageWidth\n    }\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerGallery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    data: posts,\n    horizontal: false,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.containerImage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.container,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }\n      }, item.user.name), React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Comments\", {\n            postId: item.id,\n            uid: item.user.uid\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, \"View comments...\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    users: store.usersState.users,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded\n  };\n};\n\nexport default connect(mapStateToProps, null)(FeedScreen);","map":{"version":3,"sources":["/home/legren/Projects/my-insta/components/main/Feed.js"],"names":["React","useState","useEffect","firebase","require","connect","NavigationContainer","FeedScreen","props","posts","setPosts","imageWidth","Math","floor","useWindowDimensions","width","usersFollowingLoaded","following","length","i","user","users","find","uid","undefined","sort","x","y","creation","styles","StyleSheet","create","container","flex","containerInfo","margin","containerGallery","containerImage","image","height","item","name","uri","downloadURL","navigation","navigate","postId","id","mapStateToProps","store","currentUser","userState","usersState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    Image,\n    FlatList,\n    useWindowDimensions,\n    Button,\n} from \"react-native\";\nimport firebase from \"firebase\";\nrequire(\"firebase/firestore\");\nimport { connect } from \"react-redux\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nfunction FeedScreen(props) {\n    const [posts, setPosts] = useState([]);\n\n    const imageWidth = Math.floor(useWindowDimensions().width);\n\n    useEffect(() => {\n        let posts = [];\n\n        if (props.usersFollowingLoaded === props.following.length) {\n            for (let i = 0; i < props.following.length; i++) {\n                const user = props.users.find(\n                    (user) => user.uid === props.following[i]\n                );\n                if (user !== undefined) {\n                    // console.log(\"USER?\", user);\n                    posts = [...posts, ...user.posts];\n                }\n            }\n        }\n\n        posts.sort((x, y) => {\n            return x.creation - y.creation;\n        });\n        // console.log(\"Posts of friends\", posts);\n        setPosts(posts);\n    }, [props.usersFollowingLoaded]);\n\n    // console.log(\"Props in FEED\", props);\n\n    const styles = StyleSheet.create({\n        container: {\n            flex: 1,\n        },\n        containerInfo: {\n            margin: 20,\n        },\n        containerGallery: {\n            flex: 1,\n        },\n        containerImage: {\n            flex: 1,\n        },\n        image: {\n            width: imageWidth,\n            height: imageWidth,\n        },\n    });\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.containerGallery}>\n                <FlatList\n                    numColumns={1}\n                    data={posts}\n                    horizontal={false}\n                    renderItem={({ item }) => (\n                        <View style={styles.containerImage}>\n                            <Text style={styles.container}>\n                                {item.user.name}\n                            </Text>\n                            <Image\n                                style={styles.image}\n                                source={{ uri: item.downloadURL }}\n                            />\n                            <Text\n                                onPress={() =>\n                                    props.navigation.navigate(\"Comments\", {\n                                        postId: item.id,\n                                        uid: item.user.uid,\n                                    })\n                                }\n                            >\n                                View comments...\n                            </Text>\n                        </View>\n                    )}\n                />\n            </View>\n        </View>\n    );\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    users: store.usersState.users,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded,\n});\n\nexport default connect(mapStateToProps, null)(FeedScreen);\n"]},"metadata":{},"sourceType":"module"}