{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/legren/Projects/my-insta/components/main/Feed.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nimport { connect } from \"react-redux\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nfunction FeedScreen(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var imageWidth = Math.floor(useWindowDimensions().width);\n  useEffect(function () {\n    if (props.usersFollowingLoaded == props.following.length && props.following.length != 0) {\n      props.feed.sort(function (x, y) {\n        return x.creation - y.creation;\n      });\n      console.log(\"Props Feed\", props.feed);\n      setPosts(props.feed);\n      console.log(\"Posts of friends\", posts);\n    }\n  }, [props.usersFollowingLoaded, props.feed]);\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    containerInfo: {\n      margin: 20\n    },\n    containerGallery: {\n      flex: 1\n    },\n    containerImage: {\n      flex: 1\n    },\n    image: {\n      width: imageWidth,\n      height: imageWidth\n    }\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerGallery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded\n  };\n};\n\nexport default connect(mapStateToProps, null)(FeedScreen);","map":{"version":3,"sources":["/home/legren/Projects/my-insta/components/main/Feed.js"],"names":["React","useState","useEffect","firebase","require","connect","NavigationContainer","FeedScreen","props","posts","setPosts","imageWidth","Math","floor","useWindowDimensions","width","usersFollowingLoaded","following","length","feed","sort","x","y","creation","console","log","styles","StyleSheet","create","container","flex","containerInfo","margin","containerGallery","containerImage","image","height","mapStateToProps","store","currentUser","userState","usersState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;AAUA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,kBAA0BP,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOQ,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,mBAAmB,GAAGC,KAAjC,CAAnB;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACZ,QACIM,KAAK,CAACQ,oBAAN,IAA8BR,KAAK,CAACS,SAAN,CAAgBC,MAA9C,IACAV,KAAK,CAACS,SAAN,CAAgBC,MAAhB,IAA0B,CAF9B,EAGE;AACEV,MAAAA,KAAK,CAACW,IAAN,CAAWC,IAAX,CAAgB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACtB,eAAOD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAAtB;AACH,OAFD;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BjB,KAAK,CAACW,IAAhC;AACAT,MAAAA,QAAQ,CAACF,KAAK,CAACW,IAAP,CAAR;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgChB,KAAhC;AACH;AACJ,GAZQ,EAYN,CAACD,KAAK,CAACQ,oBAAP,EAA6BR,KAAK,CAACW,IAAnC,CAZM,CAAT;AAgBA,MAAMO,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC,KADkB;AAI7BC,IAAAA,aAAa,EAAE;AACXC,MAAAA,MAAM,EAAE;AADG,KAJc;AAO7BC,IAAAA,gBAAgB,EAAE;AACdH,MAAAA,IAAI,EAAE;AADQ,KAPW;AAU7BI,IAAAA,cAAc,EAAE;AACZJ,MAAAA,IAAI,EAAE;AADM,KAVa;AAa7BK,IAAAA,KAAK,EAAE;AACHpB,MAAAA,KAAK,EAAEJ,UADJ;AAEHyB,MAAAA,MAAM,EAAEzB;AAFL;AAbsB,GAAlB,CAAf;AAmBA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEe,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACO,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAiCH;;AAED,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAChCC,IAAAA,WAAW,EAAED,KAAK,CAACE,SAAN,CAAgBD,WADG;AAEhCtB,IAAAA,SAAS,EAAEqB,KAAK,CAACE,SAAN,CAAgBvB,SAFK;AAGhCE,IAAAA,IAAI,EAAEmB,KAAK,CAACG,UAAN,CAAiBtB,IAHS;AAIhCH,IAAAA,oBAAoB,EAAEsB,KAAK,CAACG,UAAN,CAAiBzB;AAJP,GAAZ;AAAA,CAAxB;;AAOA,eAAeX,OAAO,CAACgC,eAAD,EAAkB,IAAlB,CAAP,CAA+B9B,UAA/B,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    Image,\n    FlatList,\n    useWindowDimensions,\n    Button,\n} from \"react-native\";\nimport firebase from \"firebase\";\nrequire(\"firebase/firestore\");\nimport { connect } from \"react-redux\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nfunction FeedScreen(props) {\n    const [posts, setPosts] = useState([]);\n\n    const imageWidth = Math.floor(useWindowDimensions().width);\n\n    useEffect(() => {\n        if (\n            props.usersFollowingLoaded == props.following.length &&\n            props.following.length != 0\n        ) {\n            props.feed.sort((x, y) => {\n                return x.creation - y.creation;\n            });\n            console.log(\"Props Feed\", props.feed);\n            setPosts(props.feed);\n            console.log(\"Posts of friends\", posts);\n        }\n    }, [props.usersFollowingLoaded, props.feed]);\n\n    // console.log(\"Props in FEED\", props);\n\n    const styles = StyleSheet.create({\n        container: {\n            flex: 1,\n        },\n        containerInfo: {\n            margin: 20,\n        },\n        containerGallery: {\n            flex: 1,\n        },\n        containerImage: {\n            flex: 1,\n        },\n        image: {\n            width: imageWidth,\n            height: imageWidth,\n        },\n    });\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.containerGallery}>\n                {/* <FlatList\n                    numColumns={1}\n                    data={posts}\n                    horizontal={false}\n                    extraData={props.feed}\n                    renderItem={({ item }) => (\n                        <View style={styles.containerImage}>\n                            <Text style={styles.container}>\n                                {item.user.name}\n                            </Text>\n                            <Image\n                                style={styles.image}\n                                source={{ uri: item.downloadURL }}\n                            />\n                            <Text\n                                onPress={() =>\n                                    props.navigation.navigate(\"Comments\", {\n                                        postId: item.id,\n                                        uid: item.user.uid,\n                                    })\n                                }\n                            >\n                                View comments...\n                            </Text>\n                        </View>\n                    )}\n                /> */}\n            </View>\n        </View>\n    );\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded,\n});\n\nexport default connect(mapStateToProps, null)(FeedScreen);\n"]},"metadata":{},"sourceType":"module"}