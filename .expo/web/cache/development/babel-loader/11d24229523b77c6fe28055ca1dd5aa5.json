{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/legren/Projects/my-insta/components/Main.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchUser, fetchUserPosts, fetchUserFollowing, clearData } from \"../redux/actions\";\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\nimport firebase from \"firebase\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nimport SearchScreen from \"./main/Search\";\nvar Tab = createMaterialBottomTabNavigator();\n\nvar EmptyScreen = function EmptyScreen() {\n  return null;\n};\n\nexport var MainScreen = function (_Component) {\n  _inherits(MainScreen, _Component);\n\n  var _super = _createSuper(MainScreen);\n\n  function MainScreen() {\n    _classCallCheck(this, MainScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MainScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchUser();\n      this.props.fetchUserPosts();\n      this.props.fetchUserFollowing();\n      this.props.clearData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.props.fetchUserPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var currentUser = this.props.currentUser;\n\n      if (currentUser === undefined) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 20\n          }\n        });\n      }\n\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"Feed\",\n        labeled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Feed\",\n        component: FeedScreen,\n        navigation: this.props.navigation,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"home\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"AddContainer\",\n        component: EmptyScreen,\n        listeners: function listeners(_ref2) {\n          var navigation = _ref2.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Add\");\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"plus-box\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen,\n        listeners: function listeners(_ref4) {\n          var navigation = _ref4.navigation;\n          return {\n            tabPress: function tabPress(event) {\n              event.preventDefault();\n              navigation.navigate(\"Profile\", {\n                uid: firebase.auth().currentUser.uid\n              });\n            }\n          };\n        },\n        options: {\n          tabBarIcon: function tabBarIcon(_ref5) {\n            var color = _ref5.color,\n                size = _ref5.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Search\",\n        component: SearchScreen,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color,\n                size = _ref6.size;\n            return React.createElement(MaterialCommunityIcons, {\n              name: \"magnify\",\n              color: color,\n              size: 26,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return MainScreen;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUser: fetchUser,\n    fetchUserPosts: fetchUserPosts,\n    fetchUserFollowing: fetchUserFollowing,\n    clearData: clearData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(MainScreen);","map":{"version":3,"sources":["/home/legren/Projects/my-insta/components/Main.js"],"names":["React","Component","connect","bindActionCreators","fetchUser","fetchUserPosts","fetchUserFollowing","clearData","createMaterialBottomTabNavigator","firebase","MaterialCommunityIcons","FeedScreen","ProfileScreen","SearchScreen","Tab","EmptyScreen","MainScreen","props","currentUser","undefined","navigation","tabBarIcon","color","size","tabPress","event","preventDefault","navigate","uid","auth","mapStateToProps","store","userState","mapDispatchProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Text, View } from \"react-native\";\n\n// Redux\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n    fetchUser,\n    fetchUserPosts,\n    fetchUserFollowing,\n    clearData,\n} from \"../redux/actions\";\n\nimport { createMaterialBottomTabNavigator } from \"@react-navigation/material-bottom-tabs\";\n\nimport firebase from \"firebase\";\n\n//Icons\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\n\n// Local Components\nimport FeedScreen from \"./main/Feed\";\nimport ProfileScreen from \"./main/Profile\";\nimport SearchScreen from \"./main/Search\";\n\nconst Tab = createMaterialBottomTabNavigator();\n\nconst EmptyScreen = () => {\n    return null;\n};\n\nexport class MainScreen extends Component {\n    componentDidMount() {\n        this.props.fetchUser();\n        this.props.fetchUserPosts();\n        this.props.fetchUserFollowing();\n        this.props.clearData();\n    }\n\n    componentDidUpdate() {\n        this.props.fetchUserPosts();\n    }\n\n    render() {\n        const { currentUser } = this.props;\n\n        // console.log(\"Props of Main\", this.props);\n\n        if (currentUser === undefined) {\n            return <View />;\n        }\n        return (\n            <Tab.Navigator initialRouteName=\"Feed\" labeled={false}>\n                <Tab.Screen\n                    name=\"Feed\"\n                    component={FeedScreen}\n                    navigation={this.props.navigation}\n                    options={{\n                        tabBarIcon: ({ color, size }) => {\n                            return (\n                                <MaterialCommunityIcons\n                                    name=\"home\"\n                                    color={color}\n                                    size={26}\n                                />\n                            );\n                        },\n                    }}\n                />\n                <Tab.Screen\n                    name=\"AddContainer\"\n                    component={EmptyScreen}\n                    listeners={({ navigation }) => ({\n                        tabPress: (event) => {\n                            event.preventDefault();\n                            navigation.navigate(\"Add\");\n                        },\n                    })}\n                    options={{\n                        tabBarIcon: ({ color, size }) => {\n                            return (\n                                <MaterialCommunityIcons\n                                    name=\"plus-box\"\n                                    color={color}\n                                    size={26}\n                                />\n                            );\n                        },\n                    }}\n                />\n                <Tab.Screen\n                    name=\"Profile\"\n                    component={ProfileScreen}\n                    listeners={({ navigation }) => ({\n                        tabPress: (event) => {\n                            event.preventDefault();\n                            navigation.navigate(\"Profile\", {\n                                uid: firebase.auth().currentUser.uid,\n                            });\n                        },\n                    })}\n                    options={{\n                        tabBarIcon: ({ color, size }) => {\n                            return (\n                                <MaterialCommunityIcons\n                                    name=\"account-circle\"\n                                    color={color}\n                                    size={26}\n                                />\n                            );\n                        },\n                    }}\n                />\n                <Tab.Screen\n                    name=\"Search\"\n                    component={SearchScreen}\n                    options={{\n                        tabBarIcon: ({ color, size }) => {\n                            return (\n                                <MaterialCommunityIcons\n                                    name=\"magnify\"\n                                    color={color}\n                                    size={26}\n                                />\n                            );\n                        },\n                    }}\n                />\n            </Tab.Navigator>\n        );\n    }\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n});\n\nconst mapDispatchProps = (dispatch) =>\n    bindActionCreators(\n        { fetchUser, fetchUserPosts, fetchUserFollowing, clearData },\n        dispatch\n    );\n\nexport default connect(mapStateToProps, mapDispatchProps)(MainScreen);\n"]},"metadata":{},"sourceType":"module"}