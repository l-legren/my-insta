{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/legren/Projects/my-insta/components/auth/Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from \"firebase\";\n\nvar LoginScreen = function (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n    _this.onLogin = _this.onLogin.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"onLogin\",\n    value: function onLogin() {\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      firebase.auth().signInWithEmailAndPassword(email, password).then(function (result) {\n        console.log(result);\n      }).catch(function (e) {\n        console.error(e);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"email\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        onPress: this.onLogin,\n        title: \"Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nexport { LoginScreen as default };","map":{"version":3,"sources":["/home/legren/Projects/my-insta/components/auth/Login.js"],"names":["React","Component","firebase","LoginScreen","props","state","email","password","onLogin","bind","auth","signInWithEmailAndPassword","then","result","console","log","catch","e","error","setState"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;;IAEqBC,W;;;;;AACjB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAKA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,+BAAf;AARe;AASlB;;;;WAED,mBAAU;AACN,wBAA4B,KAAKJ,KAAjC;AAAA,UAAQC,KAAR,eAAQA,KAAR;AAAA,UAAeC,QAAf,eAAeA,QAAf;AACAL,MAAAA,QAAQ,CACHQ,IADL,GAEKC,0BAFL,CAEgCL,KAFhC,EAEuCC,QAFvC,EAGKK,IAHL,CAGU,UAACC,MAAD,EAAY;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,OALL,EAMKG,KANL,CAMW,UAACC,CAAD,EAAO;AACVH,QAAAA,OAAO,CAACI,KAAR,CAAcD,CAAd;AACH,OARL;AASH;;;WAED,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,OADhB;AAEI,QAAA,YAAY,EAAE,sBAACX,KAAD;AAAA,iBAAW,MAAI,CAACa,QAAL,CAAc;AAAEb,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAX;AAAA,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,UADhB;AAEI,QAAA,eAAe,EAAE,IAFrB;AAGI,QAAA,YAAY,EAAE,sBAACC,QAAD;AAAA,iBAAc,MAAI,CAACY,QAAL,CAAc;AAAEZ,YAAAA,QAAQ,EAARA;AAAF,WAAd,CAAd;AAAA,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAUI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKC,OAAtB;AAA+B,QAAA,KAAK,EAAC,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADJ;AAcH;;;;EAxCoCP,S;;SAApBE,W","sourcesContent":["import React, { Component } from \"react\";\nimport { Text, View, Button, TextInput } from \"react-native\";\n\nimport firebase from \"firebase\";\n\nexport default class LoginScreen extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n        };\n\n        this.onLogin = this.onLogin.bind(this);\n    }\n\n    onLogin() {\n        const { email, password } = this.state;\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then((result) => {\n                console.log(result);\n            })\n            .catch((e) => {\n                console.error(e);\n            });\n    }\n\n    render() {\n        return (\n            <View>\n                <TextInput\n                    placeholder=\"email\"\n                    onChangeText={(email) => this.setState({ email })}\n                />\n                <TextInput\n                    placeholder=\"password\"\n                    secureTextEntry={true}\n                    onChangeText={(password) => this.setState({ password })}\n                />\n                <Button onPress={this.onLogin} title=\"Login\" />\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}