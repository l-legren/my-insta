{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/legren/Projects/my-insta/components/main/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nexport default function SearchScreen(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var fetchUsers = function fetchUsers(search) {\n    firebase.firestore().collection(\"users\").where(\"name\", \">=\", search).get().then(function (snapshot) {\n      var users = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setUsers(users);\n    });\n  };\n\n  console.log(\"users in Search\", users);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Search User...\",\n    onChangeText: function onChangeText(search) {\n      fetchUsers(search);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    data: users,\n    numColumns: 1,\n    horizontal: false,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Profile\", {\n            uid: item.id\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, item.name));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/legren/Projects/my-insta/components/main/Search.js"],"names":["React","useState","firebase","require","SearchScreen","props","users","setUsers","fetchUsers","search","firestore","collection","where","get","then","snapshot","docs","map","doc","data","id","console","log","item","navigation","navigate","uid","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AASA,OAAOC,QAAP,MAAqB,UAArB;;AAEAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACxC,kBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAY;AAC3BP,IAAAA,QAAQ,CACHQ,SADL,GAEKC,UAFL,CAEgB,OAFhB,EAGKC,KAHL,CAGW,MAHX,EAGmB,IAHnB,EAGyBH,MAHzB,EAIKI,GAJL,GAKKC,IALL,CAKU,UAACC,QAAD,EAAc;AAEhB,UAAMT,KAAK,GAAGS,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAACC,GAAD,EAAS;AACrC,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;AACA,YAAMC,EAAE,GAAGF,GAAG,CAACE,EAAf;AAEA;AAASA,UAAAA,EAAE,EAAFA;AAAT,WAAgBD,IAAhB;AACH,OALa,CAAd;AAMAZ,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAdL;AAeH,GAhBD;;AAkBAe,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BhB,KAA/B;AAEA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,gBADhB;AAEI,IAAA,YAAY,EAAE,sBAACG,MAAD,EAAY;AACtBD,MAAAA,UAAU,CAACC,MAAD,CAAV;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEH,KADV;AAEI,IAAA,UAAU,EAAE,CAFhB;AAGI,IAAA,UAAU,EAAE,KAHhB;AAII,IAAA,UAAU,EAAE;AAAA,UAAGiB,IAAH,QAAGA,IAAH;AAAA,aACR,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBACLlB,KAAK,CAACmB,UAAN,CAAiBC,QAAjB,CAA0B,SAA1B,EAAqC;AACjCC,YAAAA,GAAG,EAAEH,IAAI,CAACH;AADuB,WAArC,CADK;AAAA,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOG,IAAI,CAACI,IAAZ,CAPJ,CADQ;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AA0BH","sourcesContent":["import React, { useState } from \"react\";\nimport {\n    View,\n    TextInput,\n    FlatList,\n    Text,\n    TouchableOpacity,\n} from \"react-native\";\n\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nexport default function SearchScreen(props) {\n    const [users, setUsers] = useState([]);\n\n    const fetchUsers = (search) => {\n        firebase\n            .firestore()\n            .collection(\"users\")\n            .where(\"name\", \">=\", search)\n            .get()\n            .then((snapshot) => {\n                // console.log(\"inside fetchUsers\", snapshot.docs);\n                const users = snapshot.docs.map((doc) => {\n                    const data = doc.data();\n                    const id = doc.id;\n\n                    return { id, ...data };\n                });\n                setUsers(users);\n            });\n    };\n\n    console.log(\"users in Search\", users);\n\n    return (\n        <View>\n            <TextInput\n                placeholder=\"Search User...\"\n                onChangeText={(search) => {\n                    fetchUsers(search);\n                }}\n            />\n            <FlatList\n                data={users}\n                numColumns={1}\n                horizontal={false}\n                renderItem={({ item }) => (\n                    <TouchableOpacity\n                        onPress={() =>\n                            props.navigation.navigate(\"Profile\", {\n                                uid: item.id,\n                            })\n                        }\n                    >\n                        <Text>{item.name}</Text>\n                    </TouchableOpacity>\n                )}\n            />\n        </View>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}