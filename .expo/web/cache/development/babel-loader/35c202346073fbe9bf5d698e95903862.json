{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/legren/Projects/my-insta/components/main/Feed.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nimport { connect } from \"react-redux\";\n\nfunction FeedScreen(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var imageWidth = Math.floor(useWindowDimensions().width);\n  useEffect(function () {\n    if (props.usersFollowingLoaded == props.following.length && props.following.length != 0) {\n      props.feed.sort(function (x, y) {\n        return x.creation - y.creation;\n      });\n      setPosts.apply(void 0, _toConsumableArray(props.feed));\n    }\n  }, [props.usersFollowingLoaded, props.feed]);\n\n  var onLikePress = function onLikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(uid).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).set({});\n  };\n\n  var onDislikePress = function onDislikePress(userId, postId) {\n    firebase.firestore().collection(\"posts\").doc(uid).collection(\"userPosts\").doc(postId).collection(\"likes\").doc(firebase.auth().currentUser.uid).delete();\n  };\n\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1\n    },\n    containerInfo: {\n      margin: 20\n    },\n    containerGallery: {\n      flex: 1\n    },\n    containerImage: {\n      flex: 1\n    },\n    image: {\n      width: imageWidth,\n      height: imageWidth\n    }\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.containerGallery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 1,\n    data: posts,\n    horizontal: false,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        style: styles.containerImage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.container,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }, item.user.name), React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item.downloadURL\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        onPress: function onPress() {\n          return props.navigation.navigate(\"Comments\", {\n            postId: item.id,\n            uid: item.user.uid\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }\n      }, \"View comments...\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded\n  };\n};\n\nexport default connect(mapStateToProps, null)(FeedScreen);","map":{"version":3,"sources":["/home/legren/Projects/my-insta/components/main/Feed.js"],"names":["React","useState","useEffect","firebase","require","connect","FeedScreen","props","posts","setPosts","imageWidth","Math","floor","useWindowDimensions","width","usersFollowingLoaded","following","length","feed","sort","x","y","creation","onLikePress","userId","postId","firestore","collection","doc","uid","auth","currentUser","set","onDislikePress","delete","styles","StyleSheet","create","container","flex","containerInfo","margin","containerGallery","containerImage","image","height","item","user","name","uri","downloadURL","navigation","navigate","id","mapStateToProps","store","userState","usersState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    View,\n    Image,\n    FlatList,\n    useWindowDimensions,\n    Button,\n} from \"react-native\";\nimport firebase from \"firebase\";\nrequire(\"firebase/firestore\");\nimport { connect } from \"react-redux\";\n\nfunction FeedScreen(props) {\n    const [posts, setPosts] = useState([]);\n    const imageWidth = Math.floor(useWindowDimensions().width);\n\n    useEffect(() => {\n        if (\n            props.usersFollowingLoaded == props.following.length &&\n            props.following.length != 0\n        ) {\n            props.feed.sort((x, y) => {\n                return x.creation - y.creation;\n            });\n            setPosts(...props.feed);\n        }\n    }, [props.usersFollowingLoaded, props.feed]);\n\n    const onLikePress = (userId, postId) => {\n        firebase\n            .firestore()\n            .collection(\"posts\")\n            .doc(uid)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .set({});\n    };\n\n    const onDislikePress = (userId, postId) => {\n        firebase\n            .firestore()\n            .collection(\"posts\")\n            .doc(uid)\n            .collection(\"userPosts\")\n            .doc(postId)\n            .collection(\"likes\")\n            .doc(firebase.auth().currentUser.uid)\n            .delete();\n    };\n\n    const styles = StyleSheet.create({\n        container: {\n            flex: 1,\n        },\n        containerInfo: {\n            margin: 20,\n        },\n        containerGallery: {\n            flex: 1,\n        },\n        containerImage: {\n            flex: 1,\n        },\n        image: {\n            width: imageWidth,\n            height: imageWidth,\n        },\n    });\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.containerGallery}>\n                <FlatList\n                    numColumns={1}\n                    data={posts}\n                    horizontal={false}\n                    renderItem={({ item }) => (\n                        <View style={styles.containerImage}>\n                            <Text style={styles.container}>\n                                {item.user.name}\n                            </Text>\n                            <Image\n                                style={styles.image}\n                                source={{ uri: item.downloadURL }}\n                            />\n                            {/* {item.currentUserLike ? (\n                                <Button\n                                    title=\"Dislike\"\n                                    onPress={onDislikePress(\n                                        item.user.uid,\n                                        item.id\n                                    )}\n                                />\n                            ) : (\n                                <Button\n                                    title=\"Dislike\"\n                                    onPress={onLikePress(\n                                        item.user.uid,\n                                        item.id\n                                    )}\n                                />\n                            )} */}\n                            <Text\n                                onPress={() =>\n                                    props.navigation.navigate(\"Comments\", {\n                                        postId: item.id,\n                                        uid: item.user.uid,\n                                    })\n                                }\n                            >\n                                View comments...\n                            </Text>\n                        </View>\n                    )}\n                />\n            </View>\n        </View>\n    );\n}\n\nconst mapStateToProps = (store) => ({\n    currentUser: store.userState.currentUser,\n    following: store.userState.following,\n    feed: store.usersState.feed,\n    usersFollowingLoaded: store.usersState.usersFollowingLoaded,\n});\n\nexport default connect(mapStateToProps, null)(FeedScreen);\n"]},"metadata":{},"sourceType":"module"}