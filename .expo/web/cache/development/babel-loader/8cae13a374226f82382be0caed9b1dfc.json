{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/legren/Projects/my-insta/frontend/components/auth/Register.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from \"firebase\";\n\nvar RegisterScreen = function (_Component) {\n  _inherits(RegisterScreen, _Component);\n\n  var _super = _createSuper(RegisterScreen);\n\n  function RegisterScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RegisterScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      email: \"\",\n      password: \"\",\n      name: \"\"\n    };\n    _this.onSignUp = _this.onSignUp.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RegisterScreen, [{\n    key: \"onSignUp\",\n    value: function onSignUp() {\n      var _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          password = _this$state.password;\n      firebase.auth().createUserWithEmailAndPassword(email, password).then(function (result) {\n        firebase.firestore().collection(\"users\").doc(firebase.auth().currentUser.uid).set({\n          name: name,\n          email: email\n        });\n      }).catch(function (e) {\n        console.error(e);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"name\",\n        onChangeText: function onChangeText(name) {\n          return _this2.setState({\n            name: name\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"email\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.onSignUp();\n        },\n        title: \"Sign Up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return RegisterScreen;\n}(Component);\n\nexport { RegisterScreen as default };","map":{"version":3,"sources":["/home/legren/Projects/my-insta/frontend/components/auth/Register.js"],"names":["React","Component","firebase","RegisterScreen","props","state","email","password","name","onSignUp","bind","auth","createUserWithEmailAndPassword","then","result","firestore","collection","doc","currentUser","uid","set","catch","e","console","error","setState"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAGA,OAAOC,QAAP,MAAqB,UAArB;;IAEqBC,c;;;;;AACjB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAMA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AATe;AAUlB;;;;WAED,oBAAW;AACP,wBAAkC,KAAKL,KAAvC;AAAA,UAAQG,IAAR,eAAQA,IAAR;AAAA,UAAcF,KAAd,eAAcA,KAAd;AAAA,UAAqBC,QAArB,eAAqBA,QAArB;AACAL,MAAAA,QAAQ,CACHS,IADL,GAEKC,8BAFL,CAEoCN,KAFpC,EAE2CC,QAF3C,EAGKM,IAHL,CAGU,UAACC,MAAD,EAAY;AACdZ,QAAAA,QAAQ,CAACa,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESf,QAAQ,CAACS,IAAT,GAAgBO,WAAhB,CAA4BC,GAFrC,EAGKC,GAHL,CAGS;AACDZ,UAAAA,IAAI,EAAJA,IADC;AAEDF,UAAAA,KAAK,EAALA;AAFC,SAHT;AAOH,OAXL,EAYKe,KAZL,CAYW,UAACC,CAAD,EAAO;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH,OAdL;AAeH;;;WAED,kBAAS;AAAA;;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,MADhB;AAEI,QAAA,YAAY,EAAE,sBAACd,IAAD;AAAA,iBAAU,MAAI,CAACiB,QAAL,CAAc;AAAEjB,YAAAA,IAAI,EAAJA;AAAF,WAAd,CAAV;AAAA,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,OADhB;AAEI,QAAA,YAAY,EAAE,sBAACF,KAAD;AAAA,iBAAW,MAAI,CAACmB,QAAL,CAAc;AAAEnB,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAX;AAAA,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EASI,oBAAC,SAAD;AACI,QAAA,WAAW,EAAC,UADhB;AAEI,QAAA,eAAe,EAAE,IAFrB;AAGI,QAAA,YAAY,EAAE,sBAACC,QAAD;AAAA,iBAAc,MAAI,CAACkB,QAAL,CAAc;AAAElB,YAAAA,QAAQ,EAARA;AAAF,WAAd,CAAd;AAAA,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAcI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACE,QAAL,EAAN;AAAA,SAAjB;AAAwC,QAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,CADJ;AAkBH;;;;EAnDuCR,S;;SAAvBE,c","sourcesContent":["import React, { Component } from \"react\";\nimport { Text, View, Button, TextInput } from \"react-native\";\n\nimport firebase from \"firebase\";\n\nexport default class RegisterScreen extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            name: \"\",\n        };\n\n        this.onSignUp = this.onSignUp.bind(this);\n    }\n\n    onSignUp() {\n        const { name, email, password } = this.state;\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then((result) => {\n                firebase.firestore()\n                    .collection(\"users\")\n                    .doc(firebase.auth().currentUser.uid)\n                    .set({\n                        name,\n                        email,\n                    });\n            })\n            .catch((e) => {\n                console.error(e);\n            });\n    }\n\n    render() {\n        return (\n            <View>\n                <TextInput\n                    placeholder=\"name\"\n                    onChangeText={(name) => this.setState({ name })}\n                />\n                <TextInput\n                    placeholder=\"email\"\n                    onChangeText={(email) => this.setState({ email })}\n                />\n                <TextInput\n                    placeholder=\"password\"\n                    secureTextEntry={true}\n                    onChangeText={(password) => this.setState({ password })}\n                />\n                <Button onPress={() => this.onSignUp()} title=\"Sign Up\" />\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}